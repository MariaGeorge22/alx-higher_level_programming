Using ``base_geometry``
-------------------

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Now use it:
0.check __docs__:

    >>> main_docs = __import__('7-base_geometry').__doc__
    >>> main_docs is not None
    True
    >>> len(main_docs) > 0
    True
    >>> module_docs = __import__('7-base_geometry').BaseGeometry.__doc__
    >>> module_docs is not None
    True
    >>> len(module_docs) > 0
    True
    >>> function_docs = __import__('7-base_geometry').BaseGeometry.area.__doc__
    >>> function_docs is not None
    True
    >>> len(function_docs) > 0
    True
    >>> function_docs = __import__('7-base_geometry').BaseGeometry.integer_validator.__doc__
    >>> function_docs is not None
    True
    >>> len(function_docs) > 0
    True

1.Base Case:

    >>> bg = BaseGeometry()

    >>> bg.integer_validator("my_int", 12)
    >>> bg.integer_validator("width", 89)
    >>> try:
    ...     bg.integer_validator("name", "John")
    ... except Exception as e:
    ...     print("[{}] {}".format(e.__class__.__name__, e))
    [TypeError] name must be an integer
    >>> try:
    ...     bg.integer_validator("age", 0)
    ... except Exception as e:
    ...     print("[{}] {}".format(e.__class__.__name__, e))
    [ValueError] age must be greater than 0
    >>> try:
    ...     bg.integer_validator("distance", -4)
    ... except Exception as e:
    ...     print("[{}] {}".format(e.__class__.__name__, e))
    [ValueError] distance must be greater than 0
